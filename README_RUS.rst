CRUD сервис
===========

Требования
-----------
* Python 3.7 или выше
* django
* django-rest-framework
* django-filter
* postgresql


Контент
-----------
Для начала необходимо создать базу данных для нашего приложения. Я не буду описывать шаги как установить PostgreSQL
и как создавать базы данных, я препдполагаю что вы прекрасно знаете как это сделать. 
После того как база была создана вы можете склонировать репозиторий удобным для вас способом. 

Вот вы создали базу и склонировали репу. После этого в корне каталога(где находится файл manage.py) необходимо создать файл
setenv.sh. Для этого используйте команду:

.. code-block::

    touch setenv.sh

Наполните данный файл следующим содержимым:

.. code-block::

    export DATABASE_NAME="имя базы которую вы создали(у меня она называется products)"
    export DATABASE_USER="имя пользователя(я использовал юзера postgres)"
    export DATABASE_PASS="пароль"
    export DATABASE_HOST="localhost"
    export DATABASE_PORT="порт на котором запущена база"
    export SECRET_KEY="сгенерированный секретный ключ"

Условия продолжения: Вы создали базу, склонировали репу и создали файл с переменными окружения. 

Дальше вам необходимо конфигурировать приложение. Для этого запустите команду:

.. code-block::

    make configure

Данная комманда выполняет setenv.sh файл, то есть устанавливает окружения среды, создает виртуальное окружение для Python,
активирует его и устанавливает необходимые зависимости. 
После того как приложение конфигурировано, необходимо запустить процесс создания таблиц и первой миграции.Для этого выполните:

.. code-block::

    make migrations

Проверьте что в вашей базе создались необходимые таблицы из crud/models.py. Не пугайтесь что их много это django создает свои модели.

Как только убедились что миграции прошли успешно и таблицы созданы можете запускать приложения.

Команда для запуска:

.. code-block::

    make run

Я тестировал общение с API при помощи Postman, вы можете использовать что-то другое.




